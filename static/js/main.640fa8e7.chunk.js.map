{"version":3,"sources":["images/card8.png","images/cabana.png","images/corbel.png","images/ritrain.png","App.js","serviceWorker.js","Events.jsx","OnlineCourses.jsx","Home.jsx","Root.jsx","index.js"],"names":["module","exports","App","Boolean","window","location","hostname","match","Events","props","useState","events","setEvents","filteredEvents","setFilteredEvents","keyword","type","year","useEffect","axios","get","Date","now","then","response","data","temp","filter","event","title","toLowerCase","includes","event_type","console","log","length","className","map","href","url","ReactHtmlParser","overview","substring","class","event_date_formatted","id","registration","status","register_interest_email","link","getRegistration","OnlineEvents","courses","setCourses","filteredCourses","setFilteredCourses","event_category","course","src","course_image","time_to_complete","Home","setKeyword","setType","hero","setHero","setYear","Math","floor","random","bgStyle","backgroundImage","backgroundSize","backgroundPosition","minHeight","position","role","aria-label","data-vf-js-masthead","style","marginBottom","color","for","aria-labelledby","onChange","e","target","value","handleSearch","placeholder","handleTypeSelect","handleYearSelect","marginTop","OnlineCourses","pathVariable","exact","path","component","Root","root","document","getElementById","ReactDOM","render","basename","process","navigator","serviceWorker","ready","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.640fa8e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card8.c93e6d3b.png\";","module.exports = __webpack_public_path__ + \"static/media/cabana.b17839a4.png\";","module.exports = __webpack_public_path__ + \"static/media/corbel.c77ffae5.png\";","module.exports = __webpack_public_path__ + \"static/media/ritrain.5285ccde.png\";","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [list, setList] = useState();\n  const query = `query {\n  nodeQuery(filter: {conditions: [{field: \"type\", value: [\"course\", \"online_event\"], operator: IN}, {field: \"status\", value: \"1\"}]}) {\n    count\n    entities{\n      entityLabel\n      entityBundle\n      ... on NodeCourse{\n        fieldSubtitle\n        fieldStartEndDate {\n          startDate\n          endDate\n        }\n        fieldTrainingType\n        fieldTimezone\n        fieldDuration\n        fieldParticipation\n        fieldRegistrationOpensDate {\n          date\n        }\n        fieldRegistrationDeadline {\n          date\n        }\n        fieldOverview {\n          value\n        }\n       fieldVenue {\n         langcode\n         countryCode\n         administrativeArea\n         locality\n         dependentLocality\n         postalCode\n         sortingCode\n         addressLine1\n         addressLine2\n         organization\n         givenName\n         additionalName\n         familyName\n       }\n        fieldCapacity\n      }\n    }\n  }\n}`;\n\n  useEffect(() => {\n    const fetchData = () => {\n      axios.post(`http://trainingcontent.embl.org.docker.localhost:32771/graphql`, { query })\n      .then(res => {\n        console.log(res.data);\n        setList(res.data);\n      })\n    }\n    fetchData();\n    \n  }, []);\n\n  const formatDate = (date) => {\n      let finalDate = '';\n      let date1 = new Date(date.startDate);\n      let date2 = new Date(date.endDate);\n      let day1 = date1.getDate();\n      let day2 = date2.getDate();\n      let ordinal1 = getDateOrdinal(day1);\n      let ordinal2 = getDateOrdinal(day2);\n      let month1 = date1.toLocaleString('default', { month: 'short' });\n      let month2 = date2.toLocaleString('default', { month: 'short' });\n      let year1 = date1.getFullYear();\n      let year2 = date2.getFullYear();\n\n      if(day1 == day2 && month1 == month2 && year1 == year2){\n        finalDate = ordinal1  + \" \" + month1 + \" \" + year1;\n        return finalDate;\n      }\n\n      if(year1 == year2){\n        if(month1 == month2){\n          finalDate = ordinal1 + \" - \" + ordinal2 + \" \" + month1 + \" \" + year1;\n          return finalDate;\n        }else{\n          finalDate = ordinal1 + \" \" + month1 + \" - \" + ordinal2 + \" \" + month2 + \" \" + year1;\n          return finalDate;\n        }\n      }else{\n        finalDate = ordinal1 + \" \" + month1 + \" \" + year1 + \" - \" + ordinal2 + \" \" + month2 + \" \" + year2;\n          return finalDate;\n      }\n    \n  }\n\n  const getDateOrdinal = (n) => { \n    return n + (n > 0 ? ['th', 'st', 'nd', 'rd'][(n > 3 && n < 21) || n % 10 > 3 ? 0 : n % 10] : '');\n  }\n\n  const formatRegistration = (deadline) => {\n    let today = new Date(Date.now());\n\n    let lastDate = new Date(deadline.date);\n    let day = lastDate.getDate();\n    let ordinal = getDateOrdinal(day);\n    let month = lastDate.toLocaleString('default', { month: 'short' });\n    let year = lastDate.getFullYear();\n    let RegistrationClearDate = ordinal + \" \"+ month + \" \" + year;\n    // compare Registration deadline with today \n    if(today <= lastDate){\n      return \"Registration deadline: \" +  RegistrationClearDate ;\n    }else{\n      return \"Registration closed\";\n    }\n  }\n\n  const formatVenue = (venue) => {\n     return venue.organization +\", \" + \"United Kingdom\" ;\n  }\n\n  const showF2FEvents = () => {\n    if(list){\n    return  list.data.nodeQuery.entities.map((entity, key) => {\n        if(entity.entityBundle == 'course'){\n          return  <article key={key}>\n                    <h5><a href=\"#\" className=\"vf-link vf-link--primary\"> { entity.entityLabel }</a> </h5> \n                    <p>{formatDate(entity.fieldStartEndDate)} </p>\n                    <p>{entity.fieldVenue?formatVenue(entity.fieldVenue):''}</p>\n                    <p>{entity.fieldRegistrationDeadline?formatRegistration(entity.fieldRegistrationDeadline):''}</p>\n                  </article>\n        }\n      })\n    }\n  }\n\n  const showOnlineEvents = () => {\n    if(list){\n    return  list.data.nodeQuery.entities.map((entity, key) => {\n        if(entity.entityBundle == 'online_event'){\n          return  <p key={key}>{ entity.entityLabel } {entity.entityBundle}</p>\n        }\n      })\n    }\n  }\n\n\n\n\n\n  \n  return (\n    <div className=\"row\">\n    <div className=\"vf-u-margin__top--lg\"></div>\n    <div className=\"vf-u-margin__top--lg\"></div>\n      <div className=\"embl-grid\">\n        <div className=\"vf-section-header\">\n          <h5>Train onsite at EMBL-EBI</h5>\n        </div>\n        <div className=\"vf-section-content\">\n          <div className=\"vf-grid vf-grid__col-3\">\n            {showF2FEvents()}\n\n          </div>\n        </div>\n      </div>\n\n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nconst Events = (props) => {\n\n\tconst [events, setEvents] = useState(0);\n\tconst [filteredEvents, setFilteredEvents] = useState();\n\tlet keyword = props.keyword;\n\tlet type = props.type;\n  let year = props.year;\n  let apiUrlLocal = 'http://trainingcontent.embl.org.docker.localhost:32769';\n  let apiUrlDev = 'https://dev.trainingcontent.embl.org';\n\n\tuseEffect(()  => {\n\t\tif(!events){\n\t\t\taxios.get(`${apiUrlDev}/apitest/ebi-training/events?_format=json&time${Date.now()}`)\n\t\t    .then(response => {\n\t\t    \tsetEvents(response.data)\n\t\t    \tsetFilteredEvents(response.data)\n\t\t    })\n\t\t}\n\n    if(keyword && type && year){\n      let temp = events.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()) && event.event_type == type && event.year == year)\n      setFilteredEvents(temp)\n      console.log('all three set')\n    }\n\n    else if(keyword && type){\n      let temp = events.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()) && event.event_type == type)\n      setFilteredEvents(temp)\n    }\n\n    else if(keyword && year){\n      let temp = events.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()) && event.year == year)\n      setFilteredEvents(temp)\n    }\n\n    else if(type && year){\n      let temp = events.filter(event =>  event.event_type == type && event.year == year)\n      setFilteredEvents(temp)\n    }\n\n\t\telse if(keyword){\n    \tlet temp = events.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()))\n    \tsetFilteredEvents(temp)\n    }\n\n    else if(type){\n    \tlet temp = events.filter(event =>  event.event_type == type)\n\t\t\tsetFilteredEvents(temp)\n    }\n\n    else if(year){\n      let temp = events.filter(event =>  event.year == year)\n      setFilteredEvents(temp)\n      console.log('only year set')\n    }\n\n    else{\n      setFilteredEvents(events)\n    }\n\n  },[keyword, type, year]);\n\n  \tconst getRegistration = (id) => {\n  \t\tlet event = events.filter(event => event.id == id)\n  \t\tif(event[0].event_type == 'Onsite' || event[0].event_type == 'Offsite'){\n  \t\t\tif(event[0].registration.status == 'closed'){\n  \t\t\t\treturn '<span class=\"text-danger\"> Registration Closed </span>';\n  \t\t\t}\n\n  \t\t\tif(event[0].registration.status == 'register_interest'){\n  \t\t\t\treturn '<a href=\"mailto:'+event[0].registration.register_interest_email+'\" class=\"vf-button vf-button--primary vf-button--sm | vf-button--show-hide\"> Register Interest</a>';\n  \t\t\t}\n\n  \t\t\tif(event[0].registration.status == 'open'){\n  \t\t\t\treturn '<a href=\"'+event[0].registration.link+'\" class=\"vf-button vf-button--primary vf-button--sm | vf-button--show-hide\"> Register Now</a>';\n  \t\t\t}\n  \t\t\t\n  \t\t}\n\n  \t}\n\n\n\treturn (\n\t\t\t<div>\n\t\t\t{console.log(filteredEvents)}\n        {filteredEvents?filteredEvents.length == 0 ? <p className='callout'>No events found</p> :'': ''}\n\t\t\n\t\t\t\t{\n\t\t\t\t\tfilteredEvents?\n\t\t\t\t\t\tfilteredEvents.map(event => \n\t\t\t\t\t\t\t<div className='eventsCard' >\n\t\t\t\t\t\t\t\t<h3><a href={event.url}> {event.title}</a> </h3>\n\t\t\t\t\t\t\t\t<div className='eventOverview'>{ReactHtmlParser(event.overview.substring(0,220))}</div>\n\t\t\t\t\t\t\t\t<div className='keyinfo'>\n\t\t\t\t\t\t\t\t\t<div className='keyinfo-dates'>\n\t\t\t\t\t\t\t\t\t\t<div className='eventLocation'><i class=\"icon icon-common icon-location\"></i> {event.location}</div>\n\t\t\t\t\t\t\t\t\t\t<div className='eventDates'><i class=\"icon icon-common icon-calendar-alt\"></i> {event.event_date_formatted} </div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='registerbutton'>{ReactHtmlParser(getRegistration(event.id))}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\n\n\t\t\t\t\t:\n\t\t\t\t\t'Loading events'\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n}\n\nexport default Events;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\nconst OnlineEvents = (props) => {\n\n\tconst [courses, setCourses] = useState(0);\n\tconst [filteredCourses, setFilteredCourses] = useState();\n\tlet keyword = props.keyword;\n\tlet type = props.type;\n\tlet apiUrlLocal = 'http://trainingcontent.embl.org.docker.localhost:32769';\n\tlet apiUrlDev = 'https://dev.trainingcontent.embl.org';\n\n\tuseEffect(()  => {\n\t\tif(!courses){\n\t\t\taxios.get(`${apiUrlDev}/apitest/ebi-training/online-courses?_format=json&time${Date.now()}`)\n\t\t    .then(response => {\n\t\t    \tsetCourses(response.data)\n\t\t    \tsetFilteredCourses(response.data)\n\t\t    })\n\t\t}\n\n\t\tif(keyword && type){\n\t      let temp = courses.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()) && event.event_category == type)\n\t      setFilteredCourses(temp)\n\t    }\n\n    \telse if(keyword){\n    \t\tlet temp = courses.filter(event =>  event.title.toLowerCase().includes(keyword.toLowerCase()))\n    \t\tsetFilteredCourses(temp)\n    \t}\n\n    \telse if(type){\n    \t\tlet temp = courses.filter(event =>  event.event_category == type)\n\t\t\tsetFilteredCourses(temp)\n    \t}\n\n    \telse{\n      \t\tsetFilteredCourses(courses)\n    \t}\n\n  \t},[keyword, type]);\n\n\n\treturn (\n\t\t\t<>\n\t\t\t{filteredCourses?filteredCourses.length == 0 ? <p className='callout'> No courses found </p> :'':''}\n\t\t\t\t{\n\t\t\t\t\tfilteredCourses?\n\t\t\t\t\t\tfilteredCourses.map(course => \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className='BooksCard column'>\n\t\t\t\t\t\t\t\t\t<a href={course.url}>\n\t\t\t\t\t\t\t\t\t\t<div className='book_cover_image_container'>\n\t\t\t\t\t\t\t\t\t\t\t<img src={course.course_image[0].url} className='book_cover_image' />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='book_overview_container'>\n\t\t\t\t\t\t\t\t\t\t\t<h5>{course.title}</h5>\n\t\t\t\t\t\t\t\t\t\t\t<div className='book_overview'>{course.overview?ReactHtmlParser(course.overview.substring(0,200)):''}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='book_icons'>\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"icon icon-common icon-clock\"></i> {course.time_to_complete}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t)\n\n\n\t\t\t\t\t:\n\t\t\t\t\t'Loading online courses'\n\n\t\t\t\t}\n\t\t\t</>\n\t\t)\n}\n\nexport default OnlineEvents;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Events from './Events';\nimport OnlineCourses from './OnlineCourses';\nimport card8 from './images/card8.png';\nimport cabana from './images/cabana.png';\nimport corbel from './images/corbel.png';\nimport ritrain from './images/ritrain.png';\n\nconst Home = () => {\n\n\tconst [keyword, setKeyword] = useState();\n\tconst [type, setType] = useState();\n\tconst [hero, setHero] = useState();\n\tconst [year, setYear] = useState();\n\n\tuseEffect(()  => {\n\t\tif(!hero){\n\t\t\tsetHero(Math.floor(Math.random() * 7)+ 1);\n\t\t}\n\t\t\n\t},[])\n\n\tconst handleSearch = (e) => {\n\t\tsetKeyword(e.target.value);\n\t}\n\n\tconst handleTypeSelect = (e) => {\n\t\tif(e.target.value == '0'){\n\t\t\tsetType(null);\n\t\t}else{\n\t\t\tsetType(e.target.value);\n\t\t}\n\n\t}\n\n\tconst handleYearSelect = (e) => {\n\t\tif(e.target.value == '0'){\n\t\t\tsetYear(null);\n\t\t}else{\n\t\t\tsetYear(e.target.value);\n\t\t}\n\t\tconsole.log(e.target.value)\n\t}\n\n\n\n\tconst bgStyle = {\n\t\tbackgroundImage: 'Url(./images/'+hero+'.jpeg)',\t\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundPosition:'top',\n\t\tminHeight: '600px',\n\t\tposition: 'relative',\n\t}\n\n\treturn (\n\t\t\t<div >\n\t\t\t\t<div role='img' aria-label='Hero image' data-vf-js-masthead className=\"vf-masthead vf-hero--intense\" style={bgStyle} >\n\t\t\t\t\t<div className='vf-body'>\n\t\t\t\t\t\t<div className='embl-grid' style={{marginBottom:'0px'}} >\n\t\t\t\t\t\t\t<div></div>\n\n\t\t\t\t\t\t\t<div className='hero-image-search acc'>\n\t\t\t\t\t\t\t\t<h1 style={{color:'white'}}>EMBL-EBI Training</h1>\n\t\t\t\t\t\t\t\t<form role='search'>\n\t\t\t\t\t\t\t\t<div className='input-group'>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<label class=\"search-label\" for=\"search_box\" aria-labelledby=\"searchTitle\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"icon icon-common icon-search icon-search-custom\">\n\t\t\t\t\t\t\t\t\t\t\t\t<title id=\"searchTitle\">Search</title>\n\t\t\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input id=\"search_box\"  onChange={ e => handleSearch(e) } type='search' className='hero-image-input' \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Search keyword' />\n\t\t\t\t\t\t\t\t\t\t<select onChange={ e => handleTypeSelect(e) }>\n\t\t\t\t\t\t\t\t\t\t\t<option value='0'>Type - All</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Onsite'>Onsite - In person at EMBL-EBI</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Offsite'>Offsite - At your institute</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Online-event'>Online Events - Live webinars or remote classrooms</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='Online-course'>Online Courses - Instant and freely available</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<select onChange={ e => handleYearSelect(e) }>\n\t\t\t\t\t\t\t\t\t\t\t<option value='0'>Year - All</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t<div className='vf-body'>\t\n\t\t\t\t\t<div className='embl-grid'>\n\t\t\t\t\t\t<div class=\"vf-section-header__heading\" style={{marginTop:'30px'}} >Training Events</div>\n\t\t\t\t\t\t<div className='acc'>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Events keyword={keyword} type={type} year={year} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='embl-grid'>\t\n\t\t\t\t\t\t<div class=\"vf-section-header__heading\" style={{marginTop:'30px'}} >Online Courses</div>\n\t\t\t\t\t\t<div className='acc'>\n\t\t\t\t\t\t\t<div className='vf-grid vf-grid__col-2'>\t<OnlineCourses keyword={keyword} type={type} /></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t\n\n\n\n\t\t\t\t\n\n\t\t\t</div>\n\n\t\t)\n}\n\nexport const pathVariable = () => (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      component={Home}\n    />\n  </Switch>\n);\n\nexport default pathVariable;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Home from './Home';\n\n\nconst Root = () => {\n\treturn(\n\t\t\t<Switch>\n\t\t\t\t<Route\n                  path=\"/\"\n                  component={Home}\n                />\n\n\n\t\t\t</Switch>\n\n\t\t)\n}\n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './Root';\n\nconst root = document.getElementById('root');\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Root />\n  </BrowserRouter>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}